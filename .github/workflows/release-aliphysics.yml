name: Prepare AliRoot and AliPhysics tags

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to prepare'
        required: true
        default: 'v5-09-XXy'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Strip trailing letters from tag
        id: strip_tag
        run: |
          echo "version=$(echo ${{ github.event.inputs.tag }} | sed 's/[a-z]*$//')" >> "$GITHUB_OUTPUT"
      - name: Checkout alidist
        uses: actions/checkout@v2
        with:
          ref: AliPhysics-${{ steps.strip_tag.outputs.version }}-01-patches
      - name: Update AliPhysics and AliRoot versions
        run: |
          set -x
          perl -p -i -e 's/v5-09-[0-9][0-9][a-z]*/${{ github.event.inputs.tag }}/g' ./*.sh
          git config --global user.email 'alibuild@cern.ch'
          git config --global user.name 'ALICE Action Bot'
          git commit -am 'Bump to ${{ github.event.inputs.tag }}' || echo 'No changes to commit'
          git tag AliPhysics-${{ github.event.inputs.tag }}-01
          git push -u origin AliPhysics-${{ steps.strip_tag.outputs.version }}-01-patches \
                             AliPhysics-${{ github.event.inputs.tag }}-01

      - name: Create alidist release
        uses: ncipollo/release-action@v1
        with:
          repo: alidist
          tag: AliPhysics-${{ github.event.inputs.tag }}-01
          name: AliPhysics-${{ github.event.inputs.tag }}-01
          draft: false
          prerelease: false
          token: ${{ secrets.ALIBUILD_RELEASE_TOKEN }}
      - name: Create AliRoot release
        uses: ncipollo/release-action@v1
        with:
          repo: AliRoot
          commit: ${{ steps.strip_tag.outputs.version }}-patches
          tag: ${{ github.event.inputs.tag }}
          name: ${{ github.event.inputs.tag }}
          draft: false
          prerelease: false
          token: ${{ secrets.ALIBUILD_RELEASE_TOKEN }}
      - name: Create AliPhysics release
        uses: ncipollo/release-action@v1
        with:
          repo: AliPhysics
          commit: ${{ steps.strip_tag.outputs.version }}-01-patches
          tag: ${{ github.event.inputs.tag }}-01
          name: ${{ github.event.inputs.tag }}-01
          draft: false
          prerelease: false
          token: ${{ secrets.ALIBUILD_RELEASE_TOKEN }}

      - name: Install Kerberos
        run: |
          sudo DEBIAN_FRONTEND=noninteractive apt install -y krb5-user
          sudo tee /etc/krb5.conf << \EOF | grep rdns
          ${{ secrets.KRB5CONF }}
          EOF
      - name: Trigger build in Jenkins
        run: |
          set -x
          echo '${{ secrets.JENKINS_BOT_PASS }}' | kinit -VC ${{ secrets.PRINCIPAL }}
          curl -V
          curl -iku : --negotiate '${{ secrets.ALIPHYSICS_BUILD_API_URL }}' \
               -H 'Content-Type: application/x-www-form-urlencoded' \
               -d 'TAG=${{ github.event.inputs.tag }}'
          klist -l | tr @ ' '
          klist
          kdestroy
